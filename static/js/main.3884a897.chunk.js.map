{"version":3,"sources":["component/Option.js","component/PlusButton.js","component/Searchbox.js","component/Alltimezone.js","component/ErrorBoundary.js","component/SubButton.js","component/UpButton.js","component/Timezone.js","component/TimezoneList.js","container/App.js","serviceWorker.js","index.js"],"names":["Option","item","onSelectTz","onClickTz","className","onClick","id","PlusButton","onPlusButton","fill","stroke","strokeWidth","strokeDashoffset","strokeDasharray","strokeLinecap","strokeLinejoin","xmlns","viewBox","cx","cy","r","x1","y1","x2","y2","Searchbox","onInputChange","completeCity","errorMes","searchboxValue","onInputBlur","autoComplete","onChange","list","type","aria-describedby","placeholder","value","length","map","index","key","splitedTimezone","filter","includes","split","ErrorBoundary","prop","state","hasError","error","errorInfo","console","log","this","props","children","React","Component","SubButton","onSubButton","tz","UpButton","onUpButton","points","Timezone","local","tzDataStr","onHoverTz","onOutTz","DateTime","setZone","setLocale","toLocaleString","DATETIME_SHORT_WITH_SECONDS","tzDataStrHuge","DATETIME_HUGE","zoneName","subZoneName","substring","indexOf","draggableId","provided","snapshot","isDragging","ref","innerRef","draggableProps","dragHandleProps","slice","lastIndexOf","TimezoneList","timezoneStrList","isHovered","droppableId","droppableProps","App","event","setState","searchbox","target","compareCity","toLowerCase","getTimezoneStr","i","prevState","newTzList","splice","tzTemp","tzArr","inputValue","inputArr","forEach","tzStr","newList","push","reorder","array","startIndex","endIndex","orderedArray","dragged","onDragEnd","result","destination","newOrder","source","dateID","setInterval","clearInterval","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3884a897.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Option = ({item, onSelectTz, onClickTz}) => {\n    return(\n        <div className=\"bg-washed-green\">\n            <div \n            className=\"w-100 bb pv2 pl2 dim b--black-50\"\n            onClick={onSelectTz}\n            id={item}\n            >{item}</div>            \n        </div>\n\n    )\n}\n\nexport default Option;\n\n","import React from 'react';\n\nconst PlusButton = ({onPlusButton}) => {\n    return(\n        <div className=\"w-10 ml3\">\n            <svg className=\"grow\"\n            fill='none' stroke='#555555' strokeWidth='10' strokeDashoffset='194' strokeDasharray='0' strokeLinecap='round' strokeLinejoin='round' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'\n            onClick={onPlusButton} >\n                <circle cx=\"50\" cy=\"50\" r=\"40\"/> \n                <line x1=\"35\" y1=\"50\" x2=\"65\" y2=\"50\" /> \n                <line x1=\"50\" y1=\"35\" x2=\"50\" y2=\"65\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default PlusButton;\n\n","import React from 'react';\nimport Option from './Option';\nimport PlusButton from './PlusButton';\n\nconst Searchbox = ({onInputChange, completeCity, errorMes, searchboxValue, onPlusButton, onSelectTz, onInputBlur}) => {\n    return (\n        <div className=\"measure pa4 black-80 \">\n            <label  className=\"f4 b db\">What time is it in</label><br/>\n            <div className=\"flex\">\n                    <div className=\"relative w-80\"\n                     >\n                        <input \n                            autoComplete=\"off\"\n                            onChange={onInputChange}\n                            id=\"city\" \n                            list=\"cityDatalist\" \n                            className=\"input-reset ba b--black-30 pa2 db w-100\" \n                            type=\"text\" \n                            aria-describedby=\"name-desc\" \n                            placeholder=\"enter city name\"\n                            value={searchboxValue}\n                            // onBlur={onInputBlur}\n                        ></input>\n                        {\n                        completeCity.length !== 0 ?\n                            <div id='cityDatalist' className=\"absolute bl br  w-100 shadow-2 b--black-50\">\n                                {completeCity.map((item, index) => {\n                                    return(\n                                        <Option \n                                            key={item}\n                                            item={item[item.length-1]}\n                                            onSelectTz={onSelectTz}\n                                        />                         \n                                    )  \n                                })}\n                            </div>\n                        :\n                        null\n                        }\n                    </div>\n\n                <PlusButton\n                onPlusButton={onPlusButton}\n                />\n            </div>\n            <br/>\n            <small id=\"name-desc\" \n            className=\"f5 black-60 db mb2\">{errorMes}</small>          \n        </div>\n    )\n}\n\nexport default Searchbox;","\nconst Alltimezone = [\"Africa/Abidjan\",\"Africa/Accra\",\"Africa/Algiers\",\"Africa/Bissau\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/El_Aaiun\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Khartoum\",\"Africa/Lagos\",\"Africa/Maputo\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Sao_Tome\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Asuncion\",\"America/Atikokan\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Cayenne\",\"America/Chicago\",\"America/Chihuahua\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Fort_Nelson\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Godthab\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vevay\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Menominee\",\"America/Merida\",\"America/Metlakatla\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Nassau\",\"America/New_York\",\"America/Nipigon\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/Center\",\"America/North_Dakota/New_Salem\",\"America/Ojinaga\",\"America/Panama\",\"America/Pangnirtung\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rainy_River\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Resolute\",\"America/Rio_Branco\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Sitka\",\"America/St_Johns\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Thunder_Bay\",\"America/Tijuana\",\"America/Toronto\",\"America/Vancouver\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"America/Yellowknife\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/Palmer\",\"Antarctica/Rothera\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Chita\",\"Asia/Choibalsan\",\"Asia/Colombo\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kathmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Riyadh\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ulaanbaatar\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faroe\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/Stanley\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Currie\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/Lindeman\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/Perth\",\"Australia/Sydney\",\"CET\",\"CST6CDT\",\"EET\",\"EST\",\"EST5EDT\",\"Etc/GMT\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-13\",\"Etc/GMT-14\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/UTC\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Helsinki\",\"Europe/Istanbul\",\"Europe/Kaliningrad\",\"Europe/Kiev\",\"Europe/Kirov\",\"Europe/Lisbon\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Ulyanovsk\",\"Europe/Uzhgorod\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zaporozhye\",\"Europe/Zurich\",\"HST\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Reunion\",\"MET\",\"MST\",\"MST7MDT\",\"PST8PDT\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Enderbury\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Wake\",\"Pacific/Wallis\",\"WET\"]\n\n\n// get ride of timezones such as: \"CET\", \"MET\", \"WET\"...\nconst slashTimezone = Alltimezone.filter(item => {\n    return item.includes(\"/\")\n})\n\n// get ride of timezones with \"GMT+1\"\nconst filtered = slashTimezone.filter(item => {\n    return !item.includes(\"GMT\") \n})\n\n// turn to two dimensions array: \"Africa/Abidjan\" => \"Africa\", \"Abidjan\"\n//  [[\"Africa\", \"Abidjan\"], [\"Africa\", \"Accra\"], ...]\nexport const splitedTimezone = filtered.map(item => {\n    return item.split(\"/\")\n})\n\n//export多項的方式：1. 前面直接加export，2. import {   }\n\n\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component{\n    constructor(prop){\n        super(prop);\n        this.state = {\n            hasError: false\n        }\n    }\n    \n    componentDidCatch(error, errorInfo){\n        console.log(error, errorInfo)\n    }\n\n    render(){\n        if(this.state.hasError === true){\n            return(<h2 className='tc pa6'>something's wrong here</h2>)\n        }\n        return this.props.children;\n    }\n\n}\nexport default ErrorBoundary;","import React from 'react';\n\nconst SubButton = ({onSubButton, tz}) => {\n    return(\n        <div className=\"w-10 dib fr w2-ns \">\n            <svg \n            onClick={() => {onSubButton(tz)}}\n            className=\"grow\"\n            fill='none' stroke='#555555' strokeWidth='10' strokeDashoffset='194' strokeDasharray='0' strokeLinecap='round' strokeLinejoin='round' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'>\n                <circle cx=\"50\" cy=\"50\" r=\"40\"/> \n                <line x1=\"35\" y1=\"50\" x2=\"65\" y2=\"50\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default SubButton;\n\n","import React from 'react';\n\nconst UpButton = ({onUpButton, tz}) => {\n    return(\n        <div className=\"w-10 dib fr w2-ns\">\n            <svg \n            onClick={() => {onUpButton(tz)}}\n            className=\"grow\"\n            fill='none' stroke='#555555' strokeWidth='10' strokeDashoffset='194' strokeDasharray='0' strokeLinecap='round' strokeLinejoin='round' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'>\n                <polyline fill=\"none\" points=\"30,30 50,15 70,30\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default UpButton;\n\n","import React from 'react';\nimport { DateTime } from 'luxon'\nimport SubButton from '../component/SubButton';\nimport UpButton from '../component/UpButton';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Timezone = ({tz, onSubButton, onUpButton, index, local, onHoverTz, onOutTz}) => {\n    const tzDataStr = DateTime.local().setZone(tz).setLocale('en-us').toLocaleString(DateTime.DATETIME_SHORT_WITH_SECONDS);\n    const tzDataStrHuge = DateTime.local().setZone(tz).setLocale('en-us').toLocaleString(DateTime.DATETIME_HUGE);\n    const zoneName = DateTime.local().setZone(tz).zoneName;\n    const subZoneName = zoneName.substring(zoneName.indexOf(\"/\")+1);\n\n    return(\n        <Draggable\n        draggableId={tz}\n        index={index}\n        >\n        {(provided, snapshot) => {\n            return (\n                <div \n                className={`center br3 w-90 pv3 ph4 mt2 ${snapshot.isDragging ? 'bg-washed-yellow' : 'bg-white'}`}\n                // onMouseOver={onHoverTz}\n                // onMouseOut={onOutTz}\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                >\n                    <div className=\"dib f3 f2-ns\" id=\"zoneName\"> {/*地名*/}\n                        {subZoneName}\n                    </div>\n                    {/*刪除按鈕*/}\n                    {                                                   \n                    zoneName === local ? \n                    null\n                    :\n                    <SubButton\n                        tz={tz}\n                        onSubButton={onSubButton}\n                    />\n                    }\n                    <div className=\"w-40-l  center-l\"> {/*分鐘 AM PM*/}\n                        <div className=\"dib w-70 tr pr2\">\n                            <span className=\"f1\" id=\"10:14\">\n                                {tzDataStr.slice(-11, -6)}\n                            </span>\n                            <span className=\"f2 gray\" id=\":55\">\n                                {tzDataStr.slice(-6, -3)}\n                            </span>\n                        </div>\n                        <div className=\"f4 dib\" id=\"AM PM\"> {/*AM PM*/}\n                            {tzDataStr.slice(-2)} \n                        </div>                    \n                    </div>                                                  \n                    <div className=\"f5 f3-ns gray dib \" id=\"Friday, December 11, 2020\">{/*日期*/}\n                        {tzDataStrHuge.slice(0, tzDataStrHuge.lastIndexOf(\",\"))}\n                    </div>\n                    {\n                    index !== 0 ?\n                    <UpButton\n                        tz={tz}\n                        onUpButton={onUpButton} \n                    />\n                    :\n                    null\n                    }\n                </div>\n            )\n        }}\n        </Draggable>\n    )\n}\n\nexport default Timezone;\n\n","import React from 'react';\nimport Timezone from './Timezone';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst TimezoneList = ({timezoneStrList, onSubButton, onUpButton, local, onHoverTz, onOutTz, isHovered}) => {\n    return(\n        <Droppable droppableId=\"droppable\">\n        {(provided, snapshot) => {\n            return(\n                <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                >\n                {\n                    timezoneStrList.map((item, index) => {\n                        return(\n                            <Timezone\n                            key={item}\n                            tz={item}\n                            onSubButton={onSubButton}\n                            onUpButton={onUpButton}\n                            index={index}\n                            local={local}\n                            onHoverTz={onHoverTz}\n                            onOutTz={onOutTz}\n                            isHovered={isHovered}\n                            />                      \n                        )\n                    })\n                }\n                {provided.placeholder}\n                </div>\n            )\n        }}   \n        </Droppable>\n    )\n}\n\n\nexport default TimezoneList;","import React from 'react';\nimport Searchbox from '../component/Searchbox';\nimport {splitedTimezone} from '../component/Alltimezone';\nimport ErrorBoundary from '../component/ErrorBoundary';\nimport { DateTime } from \"luxon\";\nimport TimezoneList from '../component/TimezoneList';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      searchbox: '',\n      completeCity: [], // auto complete options\n      timezoneStrList: [DateTime.local().zoneName, ],\n      local: DateTime.local().zoneName,\n      isHovered: false\n    }\n  }\n\n  // when page loading, do fetch function every second \n  componentDidMount(){\n    this.dateID = setInterval(()=> {this.setState({local: DateTime.local().zoneName})}, 1000)\n  }\n\n  // clear interval\n  componentWillUnmount(){\n    clearInterval(this.dateID);\n  }\n\n// setState of searchbox and do compare\n  onInputChange = (event) => { \n    this.setState({\n      searchbox: event.target.value,\n    }) \n    this.compareCity(splitedTimezone, event.target.value.toLowerCase())\n  }\n\n// use compare result (completeCity) to refresh our timezoneStrList\n  onPlusButton = () => {\n    const { completeCity  } = this.state;\n    if(completeCity.length !== 0){ // [[\"Africa\", \"Tripoli\"], [\"Antarctica\", \"Troll\"]]\n      this.getTimezoneStr(completeCity[0]); // only add the first compare result\n      this.setState({\n        searchbox: \"\",\n        completeCity: []\n      });\n    }\n    else{\n      //console.log(\"there is no matched city\")\n    }\n  }\n\n  // use subtract button to remove tz\n  onSubButton = (tz) => {\n    const i = this.state.timezoneStrList.indexOf(tz);\n    this.setState(prevState => {\n      let newTzList = prevState.timezoneStrList.slice();\n      newTzList.splice(i, 1);\n      return {timezoneStrList: newTzList};\n    })\n  }\n\n  // move city up 1 step\n  onUpButton = (tz) => {\n    const i = this.state.timezoneStrList.indexOf(tz);\n    this.setState(prevState => {\n      let newTzList = prevState.timezoneStrList.slice();\n      const tzTemp = newTzList[i];\n      newTzList[i] = newTzList[i-1];\n      newTzList[i-1] = tzTemp;\n      return({timezoneStrList: newTzList}) \n    })\n  }\n\n// compare input value with [[\"Africa\", \"Abidjan\"], ...], and refresh our auto complete options\n  compareCity = (tzArr, inputValue) => {\n    if(inputValue.length !== 0){\n      let inputArr = inputValue.split(''); // change inputValue str -> array\n      inputArr.forEach((item, index) => {\n        tzArr = tzArr.filter((tz) => {\n          if (tz[tz.length-1].length >= inputArr.length){\n            return tz[tz.length-1][index].toLowerCase() === item\n          }\n        })\n      })\n      this.setState({completeCity: tzArr})\n    }\n    else{\n      this.setState({completeCity: []})\n    }\n\n  }\n\n//  convert compare result: [\"Africa\", \"Abidjan\"] to \"Africa/Abidjan\" and setState timezoneStrList\n  getTimezoneStr = (tz) => {\n    let tzStr = '';\n    tz.forEach(item => tzStr = tzStr + item + \"/\"); // Africa/Tripoli/\n    this.setState(prevState => {\n      let newList = prevState.timezoneStrList.slice();\n      if(!this.state.timezoneStrList.includes(tzStr.slice(0, -1))){ // not allow to repeat timezone \n        newList.push(tzStr.slice(0, -1)); // get ride of the latest \"/\"\n      }\n      return {timezoneStrList: newList}\n    })\n  }  \n\n  onSelectTz = (event) => {\n    console.log(\"select\", event.target.id);\n    this.setState({\n      searchbox: event.target.id,\n    })\n    this.compareCity(splitedTimezone, event.target.id.toLowerCase())\n  }\n\n  // unused\n  // if input loses focus, clear completeCity. \n  // => have to do comparsion again to make plus button works\n  // => have to add a flag to prevent invalid warning\n  onInputBlur = () => {   \n    this.setState({completeCity: []})\n  }\n\n  onHoverTz = (event) => {\n    console.log(\"onHover\")\n    this.setState({isHovered: true})\n  }\n\n  onOutTz = (event) => {\n    console.log(\"on out\");\n    this.setState({isHovered: false})\n  }\n\n  // an given array, with a known index (startIndex) of element, change to a new position (endIndex)\n  reorder = (array, startIndex, endIndex) => {\n    let orderedArray = array.slice();\n    const [dragged] = orderedArray.splice(startIndex, 1)\n    orderedArray.splice(endIndex, 0, dragged);\n    return orderedArray;\n  }\n\n  onDragEnd = (result) => {\n    if(!result.destination){ \n      return\n    }\n    const newOrder = this.reorder(this.state.timezoneStrList, result.source.index, result.destination.index);\n    this.setState({timezoneStrList: newOrder})\n  }\n\n  render(){\n    const {timezoneStrList, completeCity, searchbox, local} = this.state;\n\n// if has not get any timezone data, show \"loading\"\n    if(timezoneStrList.length === 0){\n      return(<h2 className='tc pa6'>loading...</h2>)\n    }\n    else{\n      let errorMes = completeCity.length === 0 && searchbox.length !==0 ? \"Invalid timezone.\" : null;\n\n      return(\n        <div> \n          <ErrorBoundary>\n            <Searchbox \n            completeCity={completeCity} \n            onInputChange={this.onInputChange}\n            errorMes={errorMes}\n            searchboxValue={searchbox}\n            onPlusButton={this.onPlusButton}\n            onSelectTz={this.onSelectTz}\n            // onInputBlur={() => {setTimeout(this.onInputBlur, 50)}}\n            />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <DragDropContext\n              onDragEnd={this.onDragEnd}>\n              <TimezoneList\n                timezoneStrList={timezoneStrList}\n                onSubButton={this.onSubButton}\n                onUpButton={this.onUpButton}\n                local={local}\n                onHoverTz={this.onHoverTz}\n                onOutTz={this.onOutTz}\n                isHovered={this.state.isHovered}\n              />\n            </DragDropContext>\n          </ErrorBoundary>\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}